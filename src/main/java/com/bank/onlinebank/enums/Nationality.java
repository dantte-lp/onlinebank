package com.bank.onlinebank.enums;

/**
 * –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–∞–Ω–∫–∞
 * –í–∫–ª—é—á–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –°–ù–ì, –ï–≤—Ä–æ–ø—ã, –ê–∑–∏–∏ –∏ –ê–º–µ—Ä–∏–∫–∏
 */
public enum Nationality {

    // –°–ù–ì –∏ –ø–æ—Å—Ç—Å–æ–≤–µ—Ç—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã
    RUSSIA("RU", "–†–æ—Å—Å–∏—è", "–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è"),
    UKRAINE("UA", "–£–∫—Ä–∞–∏–Ω–∞", "–£–∫—Ä–∞–∏–Ω–∞"),
    BELARUS("BY", "–ë–µ–ª–∞—Ä—É—Å—å", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–µ–ª–∞—Ä—É—Å—å"),
    KAZAKHSTAN("KZ", "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"),
    UZBEKISTAN("UZ", "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω"),
    TAJIKISTAN("TJ", "–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω"),
    KYRGYZSTAN("KG", "–ö–∏—Ä–≥–∏–∑–∏—è", "–ö–∏—Ä–≥–∏–∑—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    ARMENIA("AM", "–ê—Ä–º–µ–Ω–∏—è", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê—Ä–º–µ–Ω–∏—è"),
    AZERBAIJAN("AZ", "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω", "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    MOLDOVA("MD", "–ú–æ–ª–¥–æ–≤–∞", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–æ–ª–¥–æ–≤–∞"),
    GEORGIA("GE", "–ì—Ä—É–∑–∏—è", "–ì—Ä—É–∑–∏—è"),

    // –ï–≤—Ä–æ–ø–∞
    GERMANY("DE", "–ì–µ—Ä–º–∞–Ω–∏—è", "–§–µ–¥–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ –ì–µ—Ä–º–∞–Ω–∏—è"),
    FRANCE("FR", "–§—Ä–∞–Ω—Ü–∏—è", "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    ITALY("IT", "–ò—Ç–∞–ª–∏—è", "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    SPAIN("ES", "–ò—Å–ø–∞–Ω–∏—è", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ò—Å–ø–∞–Ω–∏—è"),
    POLAND("PL", "–ü–æ–ª—å—à–∞", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ü–æ–ª—å—à–∞"),
    UK("GB", "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è", "–°–æ–µ–¥–∏–Ω—ë–Ω–Ω–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ"),
    NETHERLANDS("NL", "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–æ–≤"),
    BELGIUM("BE", "–ë–µ–ª—å–≥–∏—è", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ë–µ–ª—å–≥–∏—è"),
    CZECH("CZ", "–ß–µ—Ö–∏—è", "–ß–µ—à—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    AUSTRIA("AT", "–ê–≤—Å—Ç—Ä–∏—è", "–ê–≤—Å—Ç—Ä–∏–π—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    SWITZERLAND("CH", "–®–≤–µ–π—Ü–∞—Ä–∏—è", "–®–≤–µ–π—Ü–∞—Ä—Å–∫–∞—è –ö–æ–Ω—Ñ–µ–¥–µ—Ä–∞—Ü–∏—è"),
    SWEDEN("SE", "–®–≤–µ—Ü–∏—è", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –®–≤–µ—Ü–∏—è"),
    NORWAY("NO", "–ù–æ—Ä–≤–µ–≥–∏—è", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ù–æ—Ä–≤–µ–≥–∏—è"),
    FINLAND("FI", "–§–∏–Ω–ª—è–Ω–¥–∏—è", "–§–∏–Ω–ª—è–Ω–¥—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    DENMARK("DK", "–î–∞–Ω–∏—è", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –î–∞–Ω–∏—è"),

    // –ê–∑–∏—è
    CHINA("CN", "–ö–∏—Ç–∞–π", "–ö–∏—Ç–∞–π—Å–∫–∞—è –ù–∞—Ä–æ–¥–Ω–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    JAPAN("JP", "–Ø–ø–æ–Ω–∏—è", "–Ø–ø–æ–Ω–∏—è"),
    SOUTH_KOREA("KR", "–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–æ—Ä–µ—è"),
    INDIA("IN", "–ò–Ω–¥–∏—è", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ò–Ω–¥–∏—è"),
    TURKEY("TR", "–¢—É—Ä—Ü–∏—è", "–¢—É—Ä–µ—Ü–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),
    ISRAEL("IL", "–ò–∑—Ä–∞–∏–ª—å", "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ –ò–∑—Ä–∞–∏–ª—å"),
    UAE("AE", "–û–ê–≠", "–û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ –ê—Ä–∞–±—Å–∫–∏–µ –≠–º–∏—Ä–∞—Ç—ã"),
    SAUDI_ARABIA("SA", "–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è"),
    SINGAPORE("SG", "–°–∏–Ω–≥–∞–ø—É—Ä", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–∏–Ω–≥–∞–ø—É—Ä"),
    THAILAND("TH", "–¢–∞–∏–ª–∞–Ω–¥", "–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –¢–∞–∏–ª–∞–Ω–¥"),
    VIETNAM("VN", "–í—å–µ—Ç–Ω–∞–º", "–°–æ—Ü–∏–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ –í—å–µ—Ç–Ω–∞–º"),

    // –ê–º–µ—Ä–∏–∫–∞
    USA("US", "–°–®–ê", "–°–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ –®—Ç–∞—Ç—ã –ê–º–µ—Ä–∏–∫–∏"),
    CANADA("CA", "–ö–∞–Ω–∞–¥–∞", "–ö–∞–Ω–∞–¥–∞"),
    MEXICO("MX", "–ú–µ–∫—Å–∏–∫–∞", "–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–µ –°–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ –®—Ç–∞—Ç—ã"),
    BRAZIL("BR", "–ë—Ä–∞–∑–∏–ª–∏—è", "–§–µ–¥–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë—Ä–∞–∑–∏–ª–∏—è"),
    ARGENTINA("AR", "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞", "–ê—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"),

    // –û–∫–µ–∞–Ω–∏—è
    AUSTRALIA("AU", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è", "–ê–≤—Å—Ç—Ä–∞–ª–∏–π—Å–∫–∏–π –°–æ—é–∑"),
    NEW_ZEALAND("NZ", "–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è", "–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è"),

    // –î—Ä—É–≥–∏–µ
    OTHER("XX", "–î—Ä—É–≥–æ–µ", "–î—Ä—É–≥–æ–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ");

    private final String code;
    private final String shortName;
    private final String fullName;

    Nationality(String code, String shortName, String fullName) {
        this.code = code;
        this.shortName = shortName;
        this.fullName = fullName;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å ISO –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
     */
    public String getCode() {
        return code;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
     */
    public String getShortName() {
        return shortName;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω–æ–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
     */
    public String getFullName() {
        return fullName;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ UI
     */
    public String getDisplayName() {
        return shortName;
    }

    /**
     * –ù–∞–π—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –ø–æ –∫–æ–¥—É —Å—Ç—Ä–∞–Ω—ã
     */
    public static Nationality fromCode(String code) {
        for (Nationality nationality : values()) {
            if (nationality.code.equalsIgnoreCase(code)) {
                return nationality;
            }
        }
        return OTHER;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –∏–∑ –°–ù–ì
     */
    public boolean isCIS() {
        return this == RUSSIA || this == UKRAINE || this == BELARUS ||
                this == KAZAKHSTAN || this == UZBEKISTAN || this == TAJIKISTAN ||
                this == KYRGYZSTAN || this == ARMENIA || this == AZERBAIJAN ||
                this == MOLDOVA;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –∏–∑ –ï–°
     */
    public boolean isEU() {
        return this == GERMANY || this == FRANCE || this == ITALY ||
                this == SPAIN || this == POLAND || this == NETHERLANDS ||
                this == BELGIUM || this == CZECH || this == AUSTRIA ||
                this == SWEDEN || this == FINLAND || this == DENMARK;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ñ–ª–∞–≥ —Å—Ç—Ä–∞–Ω—ã (—ç–º–æ–¥–∑–∏)
     */
    public String getFlag() {
        if (code.equals("XX")) return "üè≥Ô∏è";

        int firstChar = Character.codePointAt("üá¶", 0) - Character.codePointAt("A", 0);
        int firstFlag = Character.codePointAt(code, 0) + firstChar;
        int secondFlag = Character.codePointAt(code, 1) + firstChar;

        return new String(new int[]{firstFlag, secondFlag}, 0, 2);
    }

    @Override
    public String toString() {
        return shortName;
    }
}